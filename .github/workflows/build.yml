name: Openwrt Build
on:
  workflow_dispatch: 
    inputs:
      target:
        description: '目标设备'
        required: true
        default: '360t7' 
        type: choice
        options:
        - vplus
        - 360t7
      config:
        description: '插件配置'
        required: true
        default: '360t7'
        type: choice
        options:
        - mt7981-ax3000
        - armv8_simple

  workflow_call:
    inputs:
      target:
        required: true
        type: string
      config:
        required: true
        type: string
      retryCount:
        required: false
        type: string
        default: '0'
jobs:
  build:
    name: ${{ inputs.target }}_${{ inputs.config }}
    #runs-on: ubuntu-20.04 github action免费的机器配置有限，容易导致编译失败，建议自己配个runner，配置要求硬盘空闲容量有50G以上，并装好docker，支持访问外网即可，建议使用ubuntu-20.04系统
    runs-on: ubuntu-22.04
    timeout-minutes: 2880
    env:
      package_build_tool_path: 'source' # 存放本项目工具的目录名称
      compile_path: 'compile_dir' # 存放编译过程产物及产出物的目录名称
      container_name_prefix: 'GithubActionBuild_' # 编译镜像名前缀
      container_name: 'GithubActionBuild_${{ github.run_number }}' # 编译时使用的容器名
    steps:
      - name: Print input
        run:  echo "${{ toJSON(inputs) }}"

      - name: Expand disk space
        if: ${{ !inputs.useSelfHosted }}
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 14000
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Clean source
        if: ${{ inputs.useSelfHosted }}
        run: |
          sudo rm -rf ${{ env.package_build_tool_path }}
          sudo rm -rf ${{ env.compile_path }}/artifact/*

      - name: Checkout source
        uses: actions/checkout@v3
        with:
          path: ${{ env.package_build_tool_path }}

      - name: Build firmware
        run: |
          set +e
          RETRY_COUNT=${{ inputs.retryCount }}
          RETRY_COUNT=${RETRY_COUNT:-0}
          IS_COMPILE_SUCCEED=1
          for ((i=0; i<=$RETRY_COUNT; i++))
          do
              sudo ./run_build_use_docker.sh -c ${{ inputs.config }} -d ${{ inputs.target }} -n ${{ env.container_name }} -o ${{ github.workspace }}/${{ env.compile_path }}
              if [ $? -ne 0 ];then
                  echo '失败'
              else
                  IS_COMPILE_SUCCEED=0
                  break;
              fi
          done
          echo "result: "$IS_COMPILE_SUCCEED
          exit $IS_COMPILE_SUCCEED
        working-directory: ${{ env.package_build_tool_path }}

      - name: Set artifact path
        run: |
          sudo chmod -R 777 artifact
          ARTIFACT_PATH=$PWD/$(ls artifact/${{ inputs.target }}/*.7z)
          FILE_NAME=$(basename $ARTIFACT_PATH)
          echo "ARTIFACT_PATH=$ARTIFACT_PATH" >> $GITHUB_ENV
          echo "ARTIFACT_FILE=$FILE_NAME"".${{ inputs.config }}" >> $GITHUB_ENV
        working-directory: ${{ env.compile_path }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ${{ env.ARTIFACT_FILE }}
          path: ${{ env.ARTIFACT_PATH }}
          retention-days: 7

      

